name: Staging Aepp Base Pipeline

on:
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, closed ]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  ENV: "stg"
  APP: "aepp-base"

jobs:
  main:
    runs-on: ubuntu-latest    
    name: Web build docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        id: buildx
        # Use the action from the master, as we've seen some inconsistencies with @v1
        # Issue: https://github.com/docker/build-push-action/issues/286
        uses: docker/setup-buildx-action@master
        # Only worked for us with this option on
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-${{ env.ENV }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ENV }}-buildx

      - name: Log in to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: aeternity/aepp-base
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'master') }}
            type=ref,event=tag
            type=ref,event=pr
      
      - name: Get commit sha on PR Sync
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'  
        id: git-sha
        shell: bash
        run: |
          echo "::set-output name=git-sha::$(git rev-parse --short HEAD)"
      
      - name: Build and push docker image
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'synchronize'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - uses: actions/checkout@v2
        with:
          repository: aeternity/gitops-apps.git
          ref: stg
          persist-credentials: false
          fetch-depth: 0
      
      - name: Staging PR Sync
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        uses: aeternity/ae-github-actions/argocd-pr-sync@v4
        with:
          git-sha: ${{ steps.git-sha.outputs.git-sha }}
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Staging deploy
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: aeternity/ae-github-actions/argocd-deploy@v4
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Staging undeploy
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && startsWith(github.head_ref, 'release') != true
        uses: aeternity/ae-github-actions/argocd-undeploy@v4
        with:
          url-prefix: pr-${{ env.PR_NUMBER }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Print PR url
        uses: unsplash/comment-on-pr@v1.3.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: Deployed to https://pr-${{ env.PR_NUMBER }}-${{ env.APP }}.${{ env.ENV }}.aepps.com
          check_for_duplicate_msg: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: aeternity/gitops-apps
          github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
          branch: stg
